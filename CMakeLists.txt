# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(01_code LANGUAGES C CXX)

# target
set(CMAKE_C_COMPILER "/usr/bin/clang")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
add_executable(01_code "")
set_target_properties(01_code PROPERTIES OUTPUT_NAME "01_code")
set_target_properties(01_code PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/debug")
target_compile_options(01_code PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(01_code PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(01_code PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(01_code PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(01_code PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(01_code PRIVATE -Zi)
else()
    target_compile_options(01_code PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET 01_code PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_options(01_code PRIVATE
    -m64
)
target_sources(01_code PRIVATE
    01_code/01_code.c
)

# target
set(CMAKE_C_COMPILER "/usr/bin/clang")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
add_executable(main "")
set_target_properties(main PROPERTIES OUTPUT_NAME "main")
set_target_properties(main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/debug")
target_include_directories(main PRIVATE
    /home/yaojie/.xmake/packages/f/fmt/10.0.0/00a8cc0091944cda9c00dd6f9e3103e0/include
)
target_compile_options(main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(main PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(main PRIVATE -Zi)
else()
    target_compile_options(main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(main PRIVATE
    fmt
)
target_link_directories(main PRIVATE
    /home/yaojie/.xmake/packages/f/fmt/10.0.0/00a8cc0091944cda9c00dd6f9e3103e0/lib
)
target_link_options(main PRIVATE
    -m64
)
target_sources(main PRIVATE
    src/add.cpp
    src/main.cpp
)

